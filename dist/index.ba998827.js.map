{"mappings":"AAAA,IAAIA,MACAC,MACAC,OACAC,MAAQ,EAEZ,MAAMC,YAAcC,MAAM,8CACvBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,GAAQC,iBAAiBD,KAE3BE,aAAeN,MAAM,8CAC1BC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,GAAQR,MAAQQ,IACrBH,MAAK,IAAMM,QAAQC,IAAIZ,SAGhBa,UAAYC,SAASC,eAAe,cACpCC,UAAYF,SAASC,eAAe,cACpCE,SAAWH,SAASC,eAAe,cACnCG,cAAgBJ,SAASC,eAAe,kBAGxCN,iBAAoBD,IACxBG,QAAQC,IAAIJ,GACZ,IAAK,IAAIW,EAAI,EAAGA,EAAIX,EAAKY,OAAQD,IAAK,CACpC,IAAIE,EAASP,SAASQ,cAAc,MACpCD,EAAOE,UAAY,YAAYf,EAAKW,GAAGK,KACvC,IAAIC,EAAMX,SAASQ,cAAc,MAC7BI,EAASZ,SAASQ,cAAc,UACpCI,EAAOC,MAAQ,GAAGnB,EAAKW,GAAGK,KAC1BE,EAAOH,UAAY,GAAGf,EAAKW,GAAGS,OAC9BX,SAASY,YAAYH,GACrBD,EAAIF,UAAYf,EAAKW,GAAGS,KACxBP,EAAOQ,YAAYJ,GACnBT,UAAUa,YAAYR,KAI1BS,WAAWC,iBAAiB,UAAWC,IACxB,GAAT9B,QACFgB,cAAcK,UAAY,GAC1BrB,MAAQ,GAEV+B,aAAajC,MAAOgC,EAAME,OAAOP,UAGnC,MAAMM,aAAe,CAACE,EAAUX,KAC9B,IAAK,IAAIY,EAAI,EAAGA,EAAID,EAASf,OAAQgB,IACnC,GAAID,EAASC,GAAGnC,QAAUuB,EAAI,CAC5B,IAAIa,EAAOvB,SAASQ,cAAc,OAC9BgB,EAAYxB,SAASQ,cAAc,MACnCiB,EAAWzB,SAASQ,cAAc,KACtCe,EAAKG,UAAUC,IAAI,YACnBH,EAAUE,UAAUC,IAAI,cACxBF,EAASC,UAAUC,IAAI,aACvBH,EAAUf,UAAY,GAAGY,EAASC,GAAGM,QACrCH,EAAShB,UAAY,GAAGY,EAASC,GAAGO,OACpCN,EAAKR,YAAYS,GACjBD,EAAKR,YAAYU,GACjBrB,cAAcW,YAAYQ,GAC1BnC,MAAQ","sources":["Desktop/ksen/mainPage.js"],"sourcesContent":["let users;\nlet posts;\nlet userId;\nlet reset = 0;\n// api\nconst getUserData = fetch(\"https://jsonplaceholder.typicode.com/users\")\n  .then(response => response.json())\n  .then(data => displayUserTable(data));\n\nconst getUserPosts = fetch(\"https://jsonplaceholder.typicode.com/posts\")\n.then(response => response.json())\n.then(data => posts = data)\n.then(() => console.log(posts));\n\n\n  const userTable = document.getElementById(\"user-table\");\n  const tableBody = document.getElementById(\"table-body\");\n  const selector = document.getElementById(\"selectItem\");\n  const postContainer = document.getElementById(\"post-container\");\n\n\n  const displayUserTable = (data) => {\n    console.log(data);\n    for (let i = 0; i < data.length; i++) {\n      let header = document.createElement(\"th\");\n      header.innerHTML = `User ID: ${data[i].id}`;\n      let row = document.createElement(\"tr\");\n      let option = document.createElement(\"option\");\n      option.value = `${data[i].id}`;\n      option.innerHTML = `${data[i].name}`;\n      selector.appendChild(option);\n      row.innerHTML = data[i].name;\n      header.appendChild(row);\n      tableBody.appendChild(header);\n    }\n  }\n\n  selectItem.addEventListener(\"change\", (event) => {\n    if (reset == 1) {\n      postContainer.innerHTML = \"\";\n      reset = 0;\n    };\n    displayPosts(posts, event.target.value);\n  })\n  // grab id and data from ip,, if match display something\n  const displayPosts = (postData, id) => {\n    for (let j = 0; j < postData.length; j++) {\n      if (postData[j].userId == id) {\n        let post = document.createElement(\"div\");\n        let postTitle = document.createElement(\"h2\");\n        let postBody = document.createElement(\"p\");\n        post.classList.add(\"post-div\");\n        postTitle.classList.add(\"post-title\");\n        postBody.classList.add(\"post-body\");\n        postTitle.innerHTML = `${postData[j].title}`;\n        postBody.innerHTML = `${postData[j].body}`;\n        post.appendChild(postTitle);\n        post.appendChild(postBody);\n        postContainer.appendChild(post);\n        reset = 1;\n        //postContainer.appendChild(post)\n      }\n    }\n  }"],"names":["users","posts","userId","reset","getUserData","fetch","then","response","json","data","displayUserTable","getUserPosts","console","log","userTable","document","getElementById","tableBody","selector","postContainer","i","length","header","createElement","innerHTML","id","row","option","value","name","appendChild","selectItem","addEventListener","event","displayPosts","target","postData","j","post","postTitle","postBody","classList","add","title","body"],"version":3,"file":"index.ba998827.js.map"}